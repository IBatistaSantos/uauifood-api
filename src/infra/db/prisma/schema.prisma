// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
    id          String @id @default(uuid())
    name        String
    email       String @unique
    password    String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @default(now())

    restaurants Restaurant[]
    employees  Employee[]

    @@map("users")
}

enum TypeCuisine {
Arabe
Brasileira
Chinesa
Pizza
}

model Restaurant {
    id          String @id @default(uuid())
    name        String
    typeCuisine     TypeCuisine
    ownerId String

    owner User @relation(fields: [ownerId], references: [id])
    active Boolean @default(true)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @default(now())

    menu Menu[]
    employees Employee[]

    @@map("restaurants")
}

model Menu {
    id          String @id @default(uuid())
    name        String
    description String?
    price       Float
    restaurantId String

    restaurant Restaurant @relation(fields: [restaurantId], references: [id])

    @@map("menu")
}

model Employee {
    id          String @id @default(uuid())
    userId String
    restaurantId String
    active Boolean @default(true)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @default(now())

    user User @relation(fields: [userId], references: [id])
    restaurant Restaurant @relation(fields: [restaurantId], references: [id])

    @@map("employees")
}


model Invite {
    id          String @id @default(uuid())
    email       String
    name String
    code String
    restaurantId String

    status InviteStatus @default(PENDING)

    createdAt   DateTime @default(now())
    updatedAt   DateTime @default(now())

    @@map("invites")
}

enum InviteStatus {
    ACCEPTED
    REJECTED
    PENDING
}
